%option noyywrap

%{



	// WARNING:                                                             :WARNING
	// WARNING: DO NOT EDIT THIS FILE! IT IS AUTOGENERATED BY FLEX          :WARNING
	// WARNING:                                                             :WARNING


#include <cstdlib>
#include "octomy_parser.hpp"
#include <QDebug>

#define YY_DECL int OctomyLexer::nextToken()

%}

hex [0-9a-fA-F]
dec [1-9][0-9]*
oct [0-7]
digit [0-9]

fract {digit}*\.{digit}+|{digit}+\.
exp [eE][+-]?{digit}+

hexfract {hex}*\.{hex}+|{hex}+\.
binexp [pP][+-]?{digit}+

icst ({dec}|0{oct}*|0[xX]{hex}+)

%%

[\n]					{ /*++context.line;*/ }
[ \t\r]+				{ /* skip */ }

icst {  return octomy_table::TOK_NUMBER; }
"descriptor" { return octomy_table::TOK_DESCRIPTOR; }
"plan" { return octomy_table::TOK_PLAN; }
"hub" { return octomy_table::TOK_HUB; }
"remote" { return octomy_table::TOK_REMOTE; }
"agent" { return octomy_table::TOK_AGENT; }
"puppet" { return octomy_table::TOK_PUPPET; }
"member" { return octomy_table::TOK_MEMBER; }
"pubkey" { return octomy_table::TOK_PUBKEY; }
"key" { return octomy_table::TOK_KEY; }
"plugin" { return octomy_table::TOK_PLUGIN; }
"import" { return octomy_table::TOK_IMPORT; }
"true" { return octomy_table::TOK_TRUE; }

"false" { return octomy_table::TOK_FALSE; }
"("     { return octomy_table::TOK_LPAREN; }
")"     { return octomy_table::TOK_RPAREN; }
"["     { return octomy_table::TOK_LBRACKET; }
"]"     { return octomy_table::TOK_RBRACKET; }
"{"     { return octomy_table::TOK_LBRACE; }
"}"     { return octomy_table::TOK_RBRACE; }
":"     { return octomy_table::TOK_COLON; }
"="     { return octomy_table::TOK_ASSIGN; }

\"[^\"\n]*\"  {
				 //yylval.string = yytext;
				 return octomy_table::TOK_STRING;
			  }
\"[^\"\n]*$ {
				 qWarning()<<"Unterminated string";
				 //yylval.string = yytext;
				 return octomy_table::TOK_STRING;
			 }


[a-z][a-z0-9]*				{ return octomy_table::TOK_IDENTIFIER; }

%%
